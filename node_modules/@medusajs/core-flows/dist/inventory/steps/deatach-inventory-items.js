"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deatachInventoryItemStep = exports.deatachInventoryItemStepId = void 0;
const utils_1 = require("@medusajs/utils");
const modules_sdk_1 = require("@medusajs/modules-sdk");
const workflows_sdk_1 = require("@medusajs/workflows-sdk");
exports.deatachInventoryItemStepId = "deattach-inventory-items-step";
exports.deatachInventoryItemStep = (0, workflows_sdk_1.createStep)(exports.deatachInventoryItemStepId, async (ids, { container }) => {
    const remoteLink = container.resolve(utils_1.ContainerRegistrationKeys.REMOTE_LINK);
    const linkModule = remoteLink.getLinkModule(modules_sdk_1.Modules.PRODUCT, "variant_id", modules_sdk_1.Modules.INVENTORY, "inventory_item_id");
    const links = (await linkModule.list({ inventory_item_id: ids }, { select: ["variant_id", "inventory_item_id"] }));
    await remoteLink.dismiss(links.map(({ inventory_item_id, variant_id }) => ({
        [modules_sdk_1.Modules.PRODUCT]: {
            variant_id,
        },
        [modules_sdk_1.Modules.INVENTORY]: {
            inventory_item_id,
        },
    })));
    return new workflows_sdk_1.StepResponse(void 0, links);
}, async (input, { container }) => {
    if (!input?.length) {
        return;
    }
    const remoteLink = container.resolve(utils_1.ContainerRegistrationKeys.REMOTE_LINK);
    const linkDefinitions = input.map(({ inventory_item_id, variant_id }) => ({
        [modules_sdk_1.Modules.PRODUCT]: {
            variant_id,
        },
        [modules_sdk_1.Modules.INVENTORY]: {
            inventory_item_id,
        },
    }));
    const links = await remoteLink.create(linkDefinitions);
});
