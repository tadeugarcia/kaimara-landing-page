"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __read = (this && this.__read) || function (o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
};
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.listTransformQueryConfig = exports.retrieveTransformQueryConfig = exports.defaultAdminProductFields = exports.listOptionConfig = exports.retrieveOptionConfig = exports.defaultAdminProductsOptionFields = exports.listVariantConfig = exports.retrieveVariantConfig = exports.defaultAdminProductsVariantFields = void 0;
exports.defaultAdminProductsVariantFields = [
    "id",
    "product_id",
    "title",
    "sku",
    "inventory_quantity",
    "allow_backorder",
    "manage_inventory",
    "hs_code",
    "origin_country",
    "mid_code",
    "material",
    "weight",
    "length",
    "height",
    "width",
    "created_at",
    "updated_at",
    "deleted_at",
    "metadata",
    "variant_rank",
    "ean",
    "upc",
    "barcode",
    "prices.id",
    "prices.currency_code",
    "prices.amount",
    "prices.created_at",
    "prices.updated_at",
    "options.id",
    "options.option_value.value",
    "options.option_value.option.title",
];
exports.retrieveVariantConfig = {
    defaultFields: exports.defaultAdminProductsVariantFields,
    defaultRelations: [],
    allowedRelations: [],
    isList: false,
};
exports.listVariantConfig = __assign(__assign({}, exports.retrieveVariantConfig), { defaultLimit: 50, isList: true });
exports.defaultAdminProductsOptionFields = ["id", "title"];
exports.retrieveOptionConfig = {
    defaultFields: exports.defaultAdminProductsOptionFields,
    isList: false,
};
exports.listOptionConfig = __assign(__assign({}, exports.retrieveVariantConfig), { defaultLimit: 50, isList: true });
/* export const allowedAdminProductRelations = [
  "variants",
  // "variants.prices",
  "variants.options",
  "images",
  // TODO: What is this?
  // "profiles",
  "options",
  "options.values",
  "tags",
  "type",
  "collection",
]*/
// TODO: This is what we had in the v1 list. Do we still want to expand that much by default? Also this doesn't work in v2 it seems.
/* export const defaultAdminProductRelations = [
  "variants",
  // "variants.prices",
  // "variants.options",
  // "profiles",
  "images",
  "options",
  // "options.values",
  "tags",
  "type",
  "collection",
]*/
exports.defaultAdminProductFields = __spreadArray([
    "id",
    "title",
    "subtitle",
    "status",
    "external_id",
    "description",
    "handle",
    "is_giftcard",
    "discountable",
    "thumbnail",
    "collection_id",
    "type_id",
    "weight",
    "length",
    "height",
    "width",
    "hs_code",
    "origin_country",
    "mid_code",
    "material",
    "created_at",
    "updated_at",
    "deleted_at",
    "metadata",
    "type.id",
    "type.value",
    "type.metadata",
    "type.created_at",
    "type.updated_at",
    "type.deleted_at",
    "collection.id",
    "collection.title",
    "collection.handle",
    "collection.created_at",
    "collection.updated_at",
    "options.id",
    "options.product_id",
    "options.title",
    "options.values.id",
    "options.values.value",
    "options.created_at",
    "options.updated_at",
    "options.deleted_at",
    "tags.id",
    "tags.value",
    "tags.created_at",
    "tags.updated_at",
    "images.id",
    "images.url",
    "images.metadata",
    "images.created_at",
    "images.updated_at",
    "images.deleted_at"
], __read(exports.defaultAdminProductsVariantFields.map(function (f) { return "variants.".concat(f); })), false);
exports.retrieveTransformQueryConfig = {
    defaults: exports.defaultAdminProductFields,
    isList: false,
};
exports.listTransformQueryConfig = __assign(__assign({}, exports.retrieveTransformQueryConfig), { defaultLimit: 50, isList: true });
//# sourceMappingURL=query-config.js.map