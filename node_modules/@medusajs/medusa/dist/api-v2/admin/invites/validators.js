"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdminPostInvitesInviteAcceptParams = exports.AdminPostInvitesInviteAcceptReq = exports.AdminPostInvitesInviteAcceptUserReq = exports.AdminCreateInviteRequest = exports.AdminGetInvitesParams = exports.AdminGetInvitesInviteParams = void 0;
var class_transformer_1 = require("class-transformer");
var class_validator_1 = require("class-validator");
var common_1 = require("../../../types/common");
var utils_1 = require("../../../utils");
var AdminGetInvitesInviteParams = /** @class */ (function (_super) {
    __extends(AdminGetInvitesInviteParams, _super);
    function AdminGetInvitesInviteParams() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return AdminGetInvitesInviteParams;
}(common_1.FindParams));
exports.AdminGetInvitesInviteParams = AdminGetInvitesInviteParams;
var AdminGetInvitesParams = /** @class */ (function (_super) {
    __extends(AdminGetInvitesParams, _super);
    function AdminGetInvitesParams() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, utils_1.IsType)([String, [String]]),
        __metadata("design:type", Object)
    ], AdminGetInvitesParams.prototype, "id", void 0);
    __decorate([
        (0, class_validator_1.IsString)(),
        (0, class_validator_1.IsOptional)(),
        __metadata("design:type", String)
    ], AdminGetInvitesParams.prototype, "order", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.ValidateNested)(),
        (0, class_transformer_1.Type)(function () { return common_1.DateComparisonOperator; }),
        __metadata("design:type", common_1.DateComparisonOperator
        /**
         * Date filters to apply on the customer invites' `created_at` date.
         */
        )
    ], AdminGetInvitesParams.prototype, "updated_at", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.ValidateNested)(),
        (0, class_transformer_1.Type)(function () { return common_1.DateComparisonOperator; }),
        __metadata("design:type", common_1.DateComparisonOperator
        /**
         * Date filters to apply on the invites' `deleted_at` date.
         */
        )
    ], AdminGetInvitesParams.prototype, "created_at", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.ValidateNested)(),
        (0, class_transformer_1.Type)(function () { return common_1.DateComparisonOperator; }),
        __metadata("design:type", common_1.DateComparisonOperator
        /**
         * Filter to apply on the invites' `email` field.
         */
        )
    ], AdminGetInvitesParams.prototype, "deleted_at", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsString)(),
        __metadata("design:type", String)
    ], AdminGetInvitesParams.prototype, "email", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        (0, class_validator_1.IsString)(),
        __metadata("design:type", String)
    ], AdminGetInvitesParams.prototype, "fields", void 0);
    return AdminGetInvitesParams;
}((0, common_1.extendedFindParamsMixin)({
    limit: 50,
    offset: 0,
})));
exports.AdminGetInvitesParams = AdminGetInvitesParams;
var AdminCreateInviteRequest = /** @class */ (function () {
    function AdminCreateInviteRequest() {
    }
    __decorate([
        (0, class_validator_1.IsEmail)(),
        __metadata("design:type", String)
    ], AdminCreateInviteRequest.prototype, "email", void 0);
    return AdminCreateInviteRequest;
}());
exports.AdminCreateInviteRequest = AdminCreateInviteRequest;
/**
 * Details of the use accepting the invite.
 */
var AdminPostInvitesInviteAcceptUserReq = /** @class */ (function () {
    function AdminPostInvitesInviteAcceptUserReq() {
    }
    return AdminPostInvitesInviteAcceptUserReq;
}());
exports.AdminPostInvitesInviteAcceptUserReq = AdminPostInvitesInviteAcceptUserReq;
/**
 * @schema AdminPostInvitesInviteAcceptReq
 * type: object
 * description: "The details of the invite to be accepted."
 * required:
 *   - token
 *   - user
 * properties:
 *   token:
 *     description: "The token of the invite to accept. This is a unique token generated when the invite was created or resent."
 *     type: string
 *   user:
 *     description: "The details of the user to create."
 *     type: object
 *     required:
 *       - first_name
 *       - last_name
 *       - password
 *     properties:
 *       first_name:
 *         type: string
 *         description: the first name of the User
 *       last_name:
 *         type: string
 *         description: the last name of the User
 *       password:
 *         description: The password for the User
 *         type: string
 *         format: password
 */
var AdminPostInvitesInviteAcceptReq = /** @class */ (function () {
    function AdminPostInvitesInviteAcceptReq() {
    }
    __decorate([
        (0, class_validator_1.IsString)(),
        (0, class_validator_1.IsOptional)(),
        __metadata("design:type", String)
    ], AdminPostInvitesInviteAcceptReq.prototype, "first_name", void 0);
    __decorate([
        (0, class_validator_1.IsString)(),
        (0, class_validator_1.IsOptional)(),
        __metadata("design:type", String)
    ], AdminPostInvitesInviteAcceptReq.prototype, "last_name", void 0);
    return AdminPostInvitesInviteAcceptReq;
}());
exports.AdminPostInvitesInviteAcceptReq = AdminPostInvitesInviteAcceptReq;
var AdminPostInvitesInviteAcceptParams = /** @class */ (function () {
    function AdminPostInvitesInviteAcceptParams() {
        this.expand = undefined;
    }
    __decorate([
        (0, class_validator_1.IsString)(),
        (0, class_validator_1.IsNotEmpty)(),
        __metadata("design:type", String)
    ], AdminPostInvitesInviteAcceptParams.prototype, "token", void 0);
    __decorate([
        (0, class_validator_1.IsOptional)(),
        __metadata("design:type", Object)
    ], AdminPostInvitesInviteAcceptParams.prototype, "expand", void 0);
    return AdminPostInvitesInviteAcceptParams;
}());
exports.AdminPostInvitesInviteAcceptParams = AdminPostInvitesInviteAcceptParams;
//# sourceMappingURL=validators.js.map