import { DateComparisonOperator, FindParams } from "../../../types/common";
export declare class AdminGetInvitesInviteParams extends FindParams {
}
declare const AdminGetInvitesParams_base: import("../../..").ClassConstructor<FindParams & import("../../../types/common").FindPaginationParams>;
export declare class AdminGetInvitesParams extends AdminGetInvitesParams_base {
    /**
     * IDs to filter invites by.
     */
    id?: string | string[];
    /**
     * The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with `-`.
     */
    order?: string;
    /**
     * Date filters to apply on the invites' `update_at` date.
     */
    updated_at?: DateComparisonOperator;
    /**
     * Date filters to apply on the customer invites' `created_at` date.
     */
    created_at?: DateComparisonOperator;
    /**
     * Date filters to apply on the invites' `deleted_at` date.
     */
    deleted_at?: DateComparisonOperator;
    /**
     * Filter to apply on the invites' `email` field.
     */
    email?: string;
    /**
     * Comma-separated fields that should be included in the returned invites.
     */
    fields?: string;
}
export declare class AdminCreateInviteRequest {
    email: string;
}
/**
 * Details of the use accepting the invite.
 */
export declare class AdminPostInvitesInviteAcceptUserReq {
}
/**
 * @schema AdminPostInvitesInviteAcceptReq
 * type: object
 * description: "The details of the invite to be accepted."
 * required:
 *   - token
 *   - user
 * properties:
 *   token:
 *     description: "The token of the invite to accept. This is a unique token generated when the invite was created or resent."
 *     type: string
 *   user:
 *     description: "The details of the user to create."
 *     type: object
 *     required:
 *       - first_name
 *       - last_name
 *       - password
 *     properties:
 *       first_name:
 *         type: string
 *         description: the first name of the User
 *       last_name:
 *         type: string
 *         description: the last name of the User
 *       password:
 *         description: The password for the User
 *         type: string
 *         format: password
 */
export declare class AdminPostInvitesInviteAcceptReq {
    /**
     * The invite's first name.
     */
    first_name: string;
    /**
     * The invite's last name.
     */
    last_name: string;
}
export declare class AdminPostInvitesInviteAcceptParams {
    token: string;
    expand: undefined;
}
export {};
